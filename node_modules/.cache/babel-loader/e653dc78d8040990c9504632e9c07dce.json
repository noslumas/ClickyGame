{"ast":null,"code":"import _classCallCheck from \"/Users/alejandro/Desktop/GitHub.noindex/GitLab/UCLA/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alejandro/Desktop/GitHub.noindex/GitLab/UCLA/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alejandro/Desktop/GitHub.noindex/GitLab/UCLA/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alejandro/Desktop/GitHub.noindex/GitLab/UCLA/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alejandro/Desktop/GitHub.noindex/GitLab/UCLA/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alejandro/Desktop/GitHub.noindex/GitLab/UCLA/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\"; // friends\n\nfunction shuffleFriends(friends) {\n  var i = friends.length - 1;\n\n  for (; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = friends[i];\n    friends[i] = friends[j];\n    friends[j] = temp;\n  }\n\n  return friends;\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0,\n      friends: friends,\n      topCount: 0,\n      message: \"\"\n    };\n\n    _this.handleIncrement = function () {\n      // We always use the setState method to update a component's state\n      _this.resetScore();\n\n      _this.setState({\n        count: _this.state.count + 1,\n        topCount: _this.state.topCount + 1\n      });\n\n      _this.handleShuffle();\n    };\n\n    _this.gameOver = function () {\n      if (_this.state.count > _this.state.topCount) {\n        _this.setState({\n          topCount: _this.state.count\n        }, function () {\n          console.log(this.state.topCount);\n        });\n      }\n\n      _this.state.friends.forEach(function (friends) {\n        console.log(friends);\n        friends.count = 0;\n      });\n\n      alert(\"Game Over :( \\nscore: \".concat(_this.state.count));\n\n      _this.setState({\n        count: 0\n      });\n\n      return true;\n    };\n\n    _this.resetScore = function () {\n      if (_this.state.count >= 12) {\n        setState.count = -1;\n        setState.topCount = -1;\n      }\n    };\n\n    _this.handleShuffle = function () {\n      var shuffledFriends = shuffleFriends(friends);\n\n      _this.setState({\n        friends: shuffledFriends\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // Map over this.state.friends and render a FriendCard component for each friend object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Clicky Game List Score:\", this.state.count, \" | Top Score: \", this.state.topCount), this.state.friends.map(function (friend) {\n        return React.createElement(FriendCard, {\n          handleIncrement: _this2.handleIncrement,\n          id: friend.id,\n          key: friend.id,\n          image: friend.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/alejandro/Desktop/GitHub.noindex/GitLab/UCLA/clicky-game/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","shuffleFriends","i","length","j","Math","floor","random","temp","App","state","count","topCount","message","handleIncrement","resetScore","setState","handleShuffle","gameOver","console","log","forEach","alert","shuffledFriends","map","friend","id","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\n// friends\nfunction shuffleFriends(friends) {\n  let i = friends.length - 1;\n \n  for (; i > 0; i--) {\n    \n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = friends[i]; friends[i] = friends[j]; friends[j] = temp;\n  }\n  return friends;\n}\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    count: 0,\n    friends,\n    topCount: 0,\n    message: \"\"\n  };\n// handleIncrement increases this.state.count by 1\nhandleIncrement = () => {\n  // We always use the setState method to update a component's state\n  this.resetScore();\n  this.setState({ count: this.state.count + 1, topCount: this.state.topCount + 1});\n  this.handleShuffle();\n  \n\n};\n\n\n\ngameOver = () => {\n  if (this.state.count > this.state.topCount) {\n    this.setState({topCount: this.state.count}, function() {\n      console.log(this.state.topCount);\n    });\n  }\n  this.state.friends.forEach(friends => {\n    console.log(friends);\n    friends.count = 0;\n  });\n  alert(`Game Over :( \\nscore: ${this.state.count}`);\n  this.setState({count: 0});\n  return true;\n}\n\nresetScore = () => {\n  if (this.state.count >= 12 ) {\n    setState.count = -1;\n    setState.topCount = -1;\n    \n  }\n};\n\n// PSEUDO-CODE  \n//IF friends.id === this.friends.id\n//restart else\n// handleIncrement()\n\nhandleShuffle = () => {\n  let shuffledFriends = shuffleFriends(friends);\n  this.setState({ friends: shuffledFriends });\n};\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Clicky Game List Score:{this.state.count} | Top Score: {this.state.topCount}</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            handleIncrement={this.handleIncrement}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n          \n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","onClick","handleIncrement","friends","className","alt","name","src","image","Wrapper","children","Title","App","state","count","topCount","message","_this","resetScore","setState","handleShuffle","gameOver","console","log","this","forEach","alert","concat","shuffledFriends","i","length","j","Math","floor","random","temp","shuffleFriends","_this2","components_Wrapper","components_Title","map","friend","components_FriendCard","id","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"8gFAaeA,MAVf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMJ,EAAMK,gBAAgBL,EAAMM,UAAUC,UAAU,QAClEN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,iBCA1BC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWP,EAAMa,iBCG1BC,MAJf,SAAed,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAII,UAAU,SAASP,EAAMa,sBC+FvBE,6MA/EbC,MAAQ,CACNC,MAAO,EACPX,UACAY,SAAU,EACVC,QAAS,MAGbd,gBAAkB,WAEhBe,EAAKC,aACLD,EAAKE,SAAS,CAAEL,MAAOG,EAAKJ,MAAMC,MAAQ,EAAGC,SAAUE,EAAKJ,MAAME,SAAW,IAC7EE,EAAKG,mBAOPC,SAAW,WAYT,OAXIJ,EAAKJ,MAAMC,MAAQG,EAAKJ,MAAME,UAChCE,EAAKE,SAAS,CAACJ,SAAUE,EAAKJ,MAAMC,OAAQ,WAC1CQ,QAAQC,IAAIC,KAAKX,MAAME,YAG3BE,EAAKJ,MAAMV,QAAQsB,QAAQ,SAAAtB,GACzBmB,QAAQC,IAAIpB,GACZA,EAAQW,MAAQ,IAElBY,MAAK,yBAAAC,OAA0BV,EAAKJ,MAAMC,QAC1CG,EAAKE,SAAS,CAACL,MAAO,KACf,KAGTI,WAAa,WACPD,EAAKJ,MAAMC,OAAS,KACtBG,EAAKJ,MAAMC,OAAS,EACpBG,EAAKJ,MAAME,UAAY,MAU3BK,cAAgB,WACd,IAAIQ,EA5DN,SAAwBzB,GAGtB,IAFA,IAAI0B,EAAI1B,EAAQ2B,OAAS,EAElBD,EAAI,EAAGA,IAAK,CAEjB,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOhC,EAAQ0B,GAAI1B,EAAQ0B,GAAK1B,EAAQ4B,GAAI5B,EAAQ4B,GAAKI,EAEjE,OAAOhC,EAoDeiC,CAAejC,GACrCc,EAAKE,SAAS,CAAEhB,QAASyB,6EAIhB,IAAAS,EAAAb,KACP,OACE1B,EAAAC,EAAAC,cAACsC,EAAD,KACExC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACfN,EAAAC,EAAAC,cAACuC,EAAD,oBACAzC,EAAAC,EAAAC,cAACuC,EAAD,iCACAzC,EAAAC,EAAAC,cAACuC,EAAD,cAAcf,KAAKX,MAAMC,MAAzB,gBAA6CU,KAAKX,MAAME,WACxDjB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACfN,EAAAC,EAAAC,cAAA,0BAAqBF,EAAAC,EAAAC,cAAA,WACrBF,EAAAC,EAAAC,cAAA,sFAEAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACdoB,KAAKX,MAAMV,QAAQqC,IAAI,SAAAC,GAAM,OAC5B3C,EAAAC,EAAAC,cAAC0C,EAAD,CACExC,gBAAiBmC,EAAKnC,gBACtByC,GAAIF,EAAOE,GACXC,IAAKH,EAAOE,GACZnC,MAAOiC,EAAOjC,WAIlBV,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,kCA3EE6C,mBCblBC,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.575d03a3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div onClick={() => props.handleIncrement(props.friends)} className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\n// friends\nfunction shuffleFriends(friends) {\n  let i = friends.length - 1;\n \n  for (; i > 0; i--) {\n    \n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = friends[i]; friends[i] = friends[j]; friends[j] = temp;\n  }\n  return friends;\n}\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    count: 0,\n    friends,\n    topCount: 0,\n    message: \"\"\n  };\n// handleIncrement increases this.state.count by 1\nhandleIncrement = () => {\n  // We always use the setState method to update a component's state\n  this.resetScore();\n  this.setState({ count: this.state.count + 1, topCount: this.state.topCount + 1});\n  this.handleShuffle();\n  \n\n};\n\n\n\ngameOver = () => {\n  if (this.state.count > this.state.topCount) {\n    this.setState({topCount: this.state.count}, function() {\n      console.log(this.state.topCount);\n    });\n  }\n  this.state.friends.forEach(friends => {\n    console.log(friends);\n    friends.count = 0;\n  });\n  alert(`Game Over :( \\nscore: ${this.state.count}`);\n  this.setState({count: 0});\n  return true;\n}\n\nresetScore = () => {\n  if (this.state.count >= 12 ) {\n    this.state.count = -1;\n    this.state.topCount = -1;\n    \n  }\n};\n\n// PSEUDO-CODE  \n//IF friends.id === this.friends.id\n//restart else\n// handleIncrement()\n\nhandleShuffle = () => {\n  let shuffledFriends = shuffleFriends(friends);\n  this.setState({ friends: shuffledFriends });\n};\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <div className=\"nav-bar\">\n        <Title>Clicky Game</Title>\n        <Title>Click an image to begin!</Title> \n        <Title>Score:{this.state.count} | Top Score:{this.state.topCount}</Title></div>\n        <div className=\"header\">\n        <h1>Clicky Game!</h1><br/>\n        <p>Click on an image to earn points, but don't click on any more than once!</p>\n        </div>\n        <div className=\"cardWrapper\">\n        {this.state.friends.map(friend => (\n          <FriendCard\n            handleIncrement={this.handleIncrement}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n          \n          />\n        ))}</div> \n        <footer><p>by Alejandro</p></footer>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}